class <%= @migration_class_name %> < ActiveRecord::Migration
  require 'logidze/migration'
  include Logidze::Migration
 
  def up
    <% unless only_trigger? %>
    add_column :<%= table_name %>, :log_data, :jsonb
    <% end %>

    execute <<-SQL
      CREATE TRIGGER logidze_on_<%= table_name %>
      BEFORE UPDATE OR INSERT ON <%= table_name %> FOR EACH ROW
      WHEN (coalesce(#{current_setting('logidze.disabled')}, '') <> 'on')
      EXECUTE PROCEDURE logidze_logger(<%= limit || 'null' %>,<%= except ? "'#{except}'" : 'null' %>,<%= only ? "'#{only}'" : 'null' %>);
    SQL

    <% if backfill? %>
    execute <<-SQL
      UPDATE <%= table_name %> as t
      SET log_data = logidze_snapshot(to_jsonb(t),<%= except ? "'#{except}'" : 'null' %>,<%= only ? "'#{only}'" : 'null' %>);
    SQL
    <% end %>
  end

  def down
    execute "DROP TRIGGER IF EXISTS logidze_on_<%= table_name %> on <%= table_name %>;"

    <% unless only_trigger? %>
    remove_column :<%= table_name %>, :log_data
    <% end %>
  end
end
